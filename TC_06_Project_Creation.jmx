<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TC6_Project_Creation">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;128&quot;, &quot;Not;A=Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;128&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">sc-inspect-develop.azurewebsites.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">ekr.zdassets.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">deighton.zendesk.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">dev-59278782.okta.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">o554886.ingest.sentry.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">stitch.mongodb.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">sc-inspect-develop-data-api.azurewebsites.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_8" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_8</stringProp>
            <stringProp name="Argument.value">realm.mongodb.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="P_Octa_Access_Token" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/Users/SanthoshRajan/OneDrive - Deighton Associates Ltd/Santhosh/Performanance Testing/Jmeter/Apache - Jmeter/apache-jmeter-5.6.3/Output_Files/Inspect/Octa_Access_Token.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">Octa_Access_Token</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="P_Access_Token" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/Users/SanthoshRajan/OneDrive - Deighton Associates Ltd/Santhosh/Performanance Testing/Jmeter/Apache - Jmeter/apache-jmeter-5.6.3/Output_Files/Inspect/Access_Token.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">Access_Token</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="P_Refresh_Token" enabled="true">
        <stringProp name="filename">C:/Users/SanthoshRajan/OneDrive - Deighton Associates Ltd/Santhosh/Performanance Testing/Jmeter/Apache - Jmeter/apache-jmeter-5.6.3/Output_Files/Inspect/Refresh_Token.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">Refresh_Token</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Login" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <boolProp name="WebDriverConfig.acceptinsecurecerts">false</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <stringProp name="WebDriverConfig.driver_path">C:\Users\SanthoshRajan\OneDrive - Deighton Associates Ltd\Santhosh\Performanance Testing\Jmeter\Apache - Jmeter\apache-jmeter-5.6.3\licenses\chromedriver-win32\chromedriver.exe</stringProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <boolProp name="WebDriverConfig.headless">false</boolProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <stringProp name="ChromeDriverConfig.additional_args"></stringProp>
          <stringProp name="ChromeDriverConfig.binary_path"></stringProp>
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <stringProp name="WebDriverConfig.custom_capabilites"></stringProp>
          <stringProp name="TestPlan.comments">Driver Configuration</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Inspect_oauth2.0" enabled="true"/>
        <hashTree>
          <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Login into Application with my credentials" enabled="true">
            <stringProp name="TestPlan.comments">Login the application and capturing the cookies</stringProp>
            <stringProp name="WebDriverSampler.script">import org.apache.log4j.Logger
import org.openqa.selenium.Cookie

WDS.browser.get(&apos;https://sc-inspect-develop.azurewebsites.net/&apos;)

WDS.sampleResult.sampleStart()
WDS.browser.manage().timeouts().implicitlyWait(10, java.util.concurrent.TimeUnit.SECONDS)
WDS.sampleResult.sampleEnd()

WDS.browser.getTitle()

WDS.browser.findElement(org.openqa.selenium.By.cssSelector(&apos;#input28&apos;)).sendKeys(&apos;santhosh.rajan.admin@deighton.com&apos;)
WDS.browser.findElement(org.openqa.selenium.By.cssSelector(&apos;#input36&apos;)).sendKeys(&apos;Achu123$&apos;)
WDS.browser.findElement(org.openqa.selenium.By.cssSelector(&quot;input[value=&apos;Sign in&apos;]&quot;)).click()

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(5000)
WDS.sampleResult.sampleEnd()

// Initialize WebDriver&apos;s manage() to access cookies
def cookies = WDS.browser.manage().getCookies()

// Create a logger instance
Logger logger = Logger.getLogger(&quot;jmeter.log&quot;)

// Log details of each cookie
cookies.each { Cookie cookie -&gt;
    logger.info(&quot;Cookie Name: ${cookie.getName()}&quot;)
    logger.info(&quot;Cookie Value: ${cookie.getValue()}&quot;)
    logger.info(&quot;Cookie Domain: ${cookie.getDomain()}&quot;)
    logger.info(&quot;Cookie Path: ${cookie.getPath()}&quot;)
    logger.info(&quot;Cookie Expiry: ${cookie.getExpiry()}&quot;)
}
logger.info(&quot;Total Cookies: ${cookies.size()}&quot;)
</stringProp>
            <stringProp name="WebDriverSampler.parameters"></stringProp>
            <stringProp name="WebDriverSampler.language">groovy</stringProp>
          </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
          <hashTree/>
          <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Okta-token" enabled="true">
            <stringProp name="TestPlan.comments">Capturing Okta token from (Application - Local Storage) and save it in the csv file</stringProp>
            <stringProp name="WebDriverSampler.script">import org.openqa.selenium.JavascriptExecutor
import groovy.json.JsonSlurper
import java.io.FileWriter
import java.io.IOException

// Initialize the WebDriver (browser)
def driver = WDS.browser

// Navigate to the desired page
driver.get(&apos;https://sc-inspect-develop.azurewebsites.net&apos;)

// Use JavaScript to get the value from local storage
def jsExecutor = (JavascriptExecutor) driver
def localStorageValue = jsExecutor.executeScript(&apos;return localStorage.getItem(&quot;okta-token-storage&quot;);&apos;)

// Check if the value is null or empty
if (localStorageValue == null || localStorageValue.isEmpty()) {
    WDS.log.error(&quot;Local storage value is null or empty for key: okta-token-storage&quot;)
    WDS.sampleResult.setResponseMessage(&quot;Local storage value is null or empty&quot;)
    WDS.sampleResult.setSuccessful(false)
    return
}

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(50000)
WDS.sampleResult.sampleEnd()

// Store the extracted localStorageValue in a JMeter variable
WDS.vars.put(&quot;INITIAL_ID_TOKEN&quot;, localStorageValue)

// Print the full local storage value to JMeter&apos;s log
WDS.log.info(&quot;-----------INITIAL ID TOKEN: &quot; + localStorageValue)

// Parse the JSON content
def jsonSlurper = new JsonSlurper()
def parsedJson

try {
    parsedJson = jsonSlurper.parseText(localStorageValue)
} catch (Exception e) {
    WDS.log.error(&quot;Failed to parse JSON: &quot; + e.message)
    WDS.sampleResult.setResponseMessage(&quot;Failed to parse JSON&quot;)
    WDS.sampleResult.setSuccessful(false)
    return
}

// Extract the accessToken value
def accessToken = parsedJson?.accessToken?.accessToken

// Check if accessToken is found
if (accessToken == null) {
    WDS.log.error(&quot;Access Token not found in the parsed JSON.&quot;)
    WDS.sampleResult.setResponseMessage(&quot;Access Token not found&quot;)
    WDS.sampleResult.setSuccessful(false)
    return
}

// Prepare the content to write to the file
String content = accessToken + &quot;\n&quot;

// Write content to the file
String filePath = &quot;C:/Users/SanthoshRajan/OneDrive - Deighton Associates Ltd/Santhosh/Performanance Testing/Jmeter/Apache - Jmeter/apache-jmeter-5.6.3/Output_Files/Inspect/Octa_Access_Token.csv&quot;  // Update this path as needed

try {
    // Create a FileWriter with &apos;false&apos; to overwrite the file
    FileWriter writer = new FileWriter(filePath, false)  // &apos;false&apos; to overwrite the file
    writer.write(content)
    writer.close()
    WDS.log.info(&quot;Successfully wrote ACCESS_TOKEN to file: &quot; + filePath)
} catch (IOException e) {
    WDS.log.error(&quot;Failed to write to file: &quot; + e.getMessage())
    WDS.sampleResult.setResponseMessage(&quot;Failed to write to file&quot;)
    WDS.sampleResult.setSuccessful(false)
}
</stringProp>
            <stringProp name="WebDriverSampler.parameters"></stringProp>
            <stringProp name="WebDriverSampler.language">groovy</stringProp>
          </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
          <hashTree/>
          <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Access Token" enabled="true">
            <stringProp name="TestPlan.comments">Capturing Access token from (Application - Local Storage) and save it in the csv file</stringProp>
            <stringProp name="WebDriverSampler.script">// Import necessary classes
import org.openqa.selenium.JavascriptExecutor
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

// Define the file path where you want to write the token
String filePath = &quot;C:/Users/SanthoshRajan/OneDrive - Deighton Associates Ltd/Santhosh/Performanance Testing/Jmeter/Apache - Jmeter/apache-jmeter-5.6.3/Output_Files/Inspect/Access_Token.csv&quot;

// Execute JavaScript to get the local storage item for the specified key
String accessToken = ((JavascriptExecutor) WDS.browser).executeScript(
    &quot;return window.localStorage.getItem(&apos;realm-web:app(eu-inspect-develop-wqoeq):user(663527db6d507f37607a5aa1):accessToken&apos;);&quot;
)

// Log the access token to verify
WDS.log.info(&quot;Access Token: &quot; + accessToken)

// Store the access token in a JMeter variable
WDS.vars.put(&quot;accessToken&quot;, accessToken)

// Write the access token to a file, clearing the existing value first
try {
    // Create the directories if they do not exist
    Files.createDirectories(Paths.get(filePath).getParent())
    
    // Write the access token to the file, truncating any existing content
    Files.write(Paths.get(filePath), accessToken.bytes, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)
    
    // Log success message
    WDS.log.info(&quot;Access Token successfully written to &quot; + filePath)
} catch (Exception e) {
    // Log error message
    WDS.log.error(&quot;Failed to write Access Token to file: &quot; + e.getMessage())
}</stringProp>
            <stringProp name="WebDriverSampler.parameters"></stringProp>
            <stringProp name="WebDriverSampler.language">groovy</stringProp>
          </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
          <hashTree/>
          <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Refresh Token" enabled="true">
            <stringProp name="TestPlan.comments">Capturing Refresh token from (Application - Local Storage) and save it in the csv file</stringProp>
            <stringProp name="WebDriverSampler.script">// Import necessary classes
import org.openqa.selenium.JavascriptExecutor
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

// Define the file path where you want to write the tokens
String filePath = &quot;C:/Users/SanthoshRajan/OneDrive - Deighton Associates Ltd/Santhosh/Performanance Testing/Jmeter/Apache - Jmeter/apache-jmeter-5.6.3/Output_Files/Inspect/Refresh_Token.csv&quot;

// Execute JavaScript to get the local storage item for the refresh token
String refreshToken = ((JavascriptExecutor) WDS.browser).executeScript(
    &quot;return window.localStorage.getItem(&apos;realm-web:app(eu-inspect-develop-wqoeq):user(663527db6d507f37607a5aa1):refreshToken&apos;);&quot;
)

// Log the refresh token to verify
WDS.log.info(&quot;Refresh Token: &quot; + refreshToken)

// Store the refresh token in a JMeter variable
WDS.vars.put(&quot;refreshToken&quot;, refreshToken)

// Write the refresh token to a file, clearing the existing values first
try {
    // Create the directories if they do not exist
    Files.createDirectories(Paths.get(filePath).getParent())
    
    // Prepare the content with only the refresh token value
    String content = refreshToken + &quot;\n&quot;
    
    // Write the refresh token to the file, truncating (clearing) any existing content
    Files.write(Paths.get(filePath), content.bytes, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)
    
    // Log success message
    WDS.log.info(&quot;Refresh token successfully written to &quot; + filePath)
} catch (Exception e) {
    // Log error message
    WDS.log.error(&quot;Failed to write refresh token to file: &quot; + e.getMessage())
}
</stringProp>
            <stringProp name="WebDriverSampler.parameters"></stringProp>
            <stringProp name="WebDriverSampler.language">groovy</stringProp>
          </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TC6_Project_Creation">
        <intProp name="ThreadGroup.num_threads">2</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Launch" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop.azurewebsites.net/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ekr.zdassets.com/compose/aaddbd3c-9b31-4779-9595-4a3196f644f5" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">compose/aaddbd3c-9b31-4779-9595-4a3196f644f5</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://deighton.zendesk.com/embeddable/config" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">embeddable/config</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/.well-known/openid-configuration" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">oauth2/default/.well-known/openid-configuration</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                  <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                  <stringProp name="Header.value">okta-auth-js/6.9.0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://deighton.zendesk.com/frontendevents/dl?client=1B752747-577B-429A-A0E0-83861AF69088" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">frontendevents/dl?client=1B752747-577B-429A-A0E0-83861AF69088</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;performance&quot;:{&quot;initInterval&quot;:1091,&quot;widgetType&quot;:&quot;classic&quot;,&quot;isMobile&quot;:false},&quot;buid&quot;:&quot;1d50adab5097447391ab3b6b46cd642b&quot;,&quot;suid&quot;:&quot;023b894f5e694b4bb0bc36936f266246&quot;,&quot;version&quot;:&quot;ef2720a&quot;,&quot;timestamp&quot;:&quot;2024-08-30T18:38:05.507Z&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/authorize?client_id=0oa6a6lpum0rj1TDZ5d7&amp;code_challenge=jme3NQG-AWQGg2uUutqAGP4NFY7Lz2Nad7ag6JsvI1s&amp;code_challenge_method=S256&amp;nonce=E8Yre6LinnOTqbHZ7rqevss2LZraDUU3fMQWEvkIN4ThwSQf2RW8IWQGw8iUo9Fw&amp;redirect_uri=https%3A%2F%2Fsc-inspect-develop.azurewebsites.net%2Flogin%2Fcallback&amp;response_type=code&amp;state=TwYbSCix2Su4G9YDqbWCXwVNNVBFHSIBdlkFw53R0Vpd62F84h4b6TWTBzKtZgg7&amp;scope=openid%20profile%20email%20groups%20offline_access" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">oauth2/default/v1/authorize</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile email groups offline_access</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_challenge_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge_method</stringProp>
                  <stringProp name="Argument.value">S256</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://sc-inspect-develop.azurewebsites.net/login/callback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">TwYbSCix2Su4G9YDqbWCXwVNNVBFHSIBdlkFw53R0Vpd62F84h4b6TWTBzKtZgg7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">E8Yre6LinnOTqbHZ7rqevss2LZraDUU3fMQWEvkIN4ThwSQf2RW8IWQGw8iUo9Fw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">0oa6a6lpum0rj1TDZ5d7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_challenge" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge</stringProp>
                  <stringProp name="Argument.value">jme3NQG-AWQGg2uUutqAGP4NFY7Lz2Nad7ag6JsvI1s</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">6324.0</stringProp>
              <stringProp name="ConstantTimer.delay">3162</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 6324 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_stateToken" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">stateToken</stringProp>
              <stringProp name="RegexExtractor.regex">stateToken=02.id.(.*?)&apos;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/idp/idx/introspect" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">idp/idx/introspect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;stateToken&quot;:&quot;02.id.${stateToken}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                  <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                  <stringProp name="Header.value">okta-auth-js/7.7.0 okta-signin-widget-7.21.0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/ion+json; okta-version=1.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/ion+json; okta-version=1.0.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Entering Credentials" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/idp/idx/identify" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">idp/idx/identify</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;identifier&quot;:&quot;santhosh.rajan.admin@deighton.com&quot;,&quot;credentials&quot;:{&quot;passcode&quot;:&quot;Achu123$&quot;},&quot;stateHandle&quot;:&quot;02.id.${stateToken}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                  <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                  <stringProp name="Header.value">okta-auth-js/7.7.0 okta-signin-widget-7.21.0</stringProp>
                </elementProp>
                <elementProp name="X-Device-Fingerprint" elementType="Header">
                  <stringProp name="Header.name">X-Device-Fingerprint</stringProp>
                  <stringProp name="Header.value">XwdEc6SO8gn15JbL3A3jauMgiRu07xGV|828966f3a7a95b5458b0c7ecc7130b242aa862b566a50ef77f19379dcbba919d|d916572f0c01afc58ca5deae4e2d1e6c</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json; okta-version=1.0.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/login/token/redirect?stateToken=02.id.iLCXudXfXcKUuL-OQEIEB083waiojh0F20uZ4oPM" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">login/token/redirect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stateToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stateToken</stringProp>
                  <stringProp name="Argument.value">02.id.${stateToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">28824.0</stringProp>
              <stringProp name="ConstantTimer.delay">14412</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 28824 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ekr.zdassets.com/compose/aaddbd3c-9b31-4779-9595-4a3196f644f5" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">compose/aaddbd3c-9b31-4779-9595-4a3196f644f5</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://deighton.zendesk.com/embeddable/config" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">embeddable/config</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/token" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">oauth2/default/v1/token</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">OL2y601aQi6uJj4UhJ4jM2mEGe5bQzy-hLhZJvsc3bk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">authorization_code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://sc-inspect-develop.azurewebsites.net/login/callback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">0oa6a6lpum0rj1TDZ5d7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_verifier" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code_verifier</stringProp>
                  <stringProp name="Argument.value">5341905395a0ecd2fde9d968a590dc11fae86a9e219</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                  <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                  <stringProp name="Header.value">okta-auth-js/6.9.0 @okta/okta-react/6.7.0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/keys" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">oauth2/default/v1/keys</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                  <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                  <stringProp name="Header.value">okta-auth-js/6.9.0 @okta/okta-react/6.7.0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o554886.ingest.sentry.io/api/4504243039305728/envelope/?sentry_key=0ce9ef23ecaf4e9dba2c6130bdd26809&amp;sentry_version=7&amp;sentry_client=sentry.javascript.react%2F7.57.0" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/4504243039305728/envelope/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.react/7.57.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">0ce9ef23ecaf4e9dba2c6130bdd26809</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">TwYbSCix2Su4G9YDqbWCXwVNNVBFHSIBdlkFw53R0Vpd62F84h4b6TWTBzKtZgg7&quot;,&quot;to&quot;:&quot;/login/callback&quot;}},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;__span&quot;:&quot;82b6af150d419f62&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.071,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043124.072,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;__span&quot;:&quot;8fb367bb7dd56d2f&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.089,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback&quot;,&quot;to&quot;:&quot;/&quot;}}],&quot;request&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/login/callback&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:38:44.101Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;,&quot;lcp.element&quot;:&quot;div.k-appbar-section &gt; img.d-app-bar-logo-image-dtims&quot;,&quot;lcp.url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/static/media/dTIMS-Inspect.840f9d51cb5b7ef60ecf38e0b545e18d.svg&quot;,&quot;lcp.size&quot;:12120},&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;98cc4e783c3ea92f&quot;,&quot;start_timestamp&quot;:1725043118.7398,&quot;timestamp&quot;:1725043118.8468,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b841ce46c461bbeb&quot;,&quot;start_timestamp&quot;:1725043119.2528,&quot;timestamp&quot;:1725043119.3878,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9860db7e82fe94a5&quot;,&quot;start_timestamp&quot;:1725043119.3933,&quot;timestamp&quot;:1725043119.5813,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bb890e1ee4d4ccf9&quot;,&quot;start_timestamp&quot;:1725043119.6666,&quot;timestamp&quot;:1725043119.7216,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8ef982e0a331d919&quot;,&quot;start_timestamp&quot;:1725043122.0361001,&quot;timestamp&quot;:1725043123.0441,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;http.response.status_code&quot;:200},&quot;description&quot;:&quot;POST https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;82b6af150d419f62&quot;,&quot;start_timestamp&quot;:1725043123.1634,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1725043123.679,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bd761ff774413318&quot;,&quot;start_timestamp&quot;:1725043123.1118,&quot;timestamp&quot;:1725043123.2087998,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b635732e2d279971&quot;,&quot;start_timestamp&quot;:1725043123.5151,&quot;timestamp&quot;:1725043123.6031,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response.status_code&quot;:200},&quot;description&quot;:&quot;GET https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8fb367bb7dd56d2f&quot;,&quot;start_timestamp&quot;:1725043123.6864,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1725043124.0721,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;91d80df32c0a27f1&quot;,&quot;start_timestamp&quot;:1725043119.1574001,&quot;timestamp&quot;:1725043119.1579,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;loadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9fcba8c71a627853&quot;,&quot;start_timestamp&quot;:1725043123.3191001,&quot;timestamp&quot;:1725043123.3204,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b54f36548ce989f5&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;84c37957ce26128e&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8f041f5dd2b57ede&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;92ef438995822058&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8fbf7edc1bd65ffb&quot;,&quot;start_timestamp&quot;:1725043118.5085,&quot;timestamp&quot;:1725043118.6453001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9bbc2c77fef8d4e9&quot;,&quot;start_timestamp&quot;:1725043118.6435,&quot;timestamp&quot;:1725043118.6453001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:263417,&quot;http.response_content_length&quot;:263117,&quot;http.decoded_response_content_length&quot;:918455,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/main.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;81663703ac3d9bcc&quot;,&quot;start_timestamp&quot;:1725043118.7220001,&quot;timestamp&quot;:1725043118.9886,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1046,&quot;http.response_content_length&quot;:746,&quot;http.decoded_response_content_length&quot;:1191,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/deighton.typography.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b7f49079eb1702e2&quot;,&quot;start_timestamp&quot;:1725043118.7235,&quot;timestamp&quot;:1725043118.9463,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36949,&quot;http.response_content_length&quot;:36649,&quot;http.decoded_response_content_length&quot;:165542,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/bootstrap.min.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a4ca6ac3ca409ac7&quot;,&quot;start_timestamp&quot;:1725043118.7241,&quot;timestamp&quot;:1725043118.9572,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2575,&quot;http.response_content_length&quot;:2275,&quot;http.decoded_response_content_length&quot;:4608,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/tui-color-picker.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b2f0dc6ff8cfc96a&quot;,&quot;start_timestamp&quot;:1725043118.7248,&quot;timestamp&quot;:1725043118.9439,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8621,&quot;http.response_content_length&quot;:8321,&quot;http.decoded_response_content_length&quot;:41990,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/tui-image-editor.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b662b99b5b4015d1&quot;,&quot;start_timestamp&quot;:1725043118.7254,&quot;timestamp&quot;:1725043118.9473,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;https://static.zdassets.com/ekr/snippet.js?key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:38:44.101Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;,&quot;lcp.element&quot;:&quot;div.k-appbar-section &gt; img.d-app-bar-logo-image-dtims&quot;,&quot;lcp.url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/static/media/dTIMS-Inspect.840f9d51cb5b7ef60ecf38e0b545e18d.svg&quot;,&quot;lcp.size&quot;:12120},&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;98cc4e783c3ea92f&quot;,&quot;start_timestamp&quot;:1725043118.7398,&quot;timestamp&quot;:1725043118.8468,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b841ce46c461bbeb&quot;,&quot;start_timestamp&quot;:1725043119.2528,&quot;timestamp&quot;:1725043119.3878,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9860db7e82fe94a5&quot;,&quot;start_timestamp&quot;:1725043119.3933,&quot;timestamp&quot;:1725043119.5813,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bb890e1ee4d4ccf9&quot;,&quot;start_timestamp&quot;:1725043119.6666,&quot;timestamp&quot;:1725043119.7216,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8ef982e0a331d919&quot;,&quot;start_timestamp&quot;:1725043122.0361001,&quot;timestamp&quot;:1725043123.0441,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;http.response.status_code&quot;:200},&quot;description&quot;:&quot;POST https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;82b6af150d419f62&quot;,&quot;start_timestamp&quot;:1725043123.1634,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1725043123.679,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bd761ff774413318&quot;,&quot;start_timestamp&quot;:1725043123.1118,&quot;timestamp&quot;:1725043123.2087998,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b635732e2d279971&quot;,&quot;start_timestamp&quot;:1725043123.5151,&quot;timestamp&quot;:1725043123.6031,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response.status_code&quot;:200},&quot;description&quot;:&quot;GET https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8fb367bb7dd56d2f&quot;,&quot;start_timestamp&quot;:1725043123.6864,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1725043124.0721,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;91d80df32c0a27f1&quot;,&quot;start_timestamp&quot;:1725043119.1574001,&quot;timestamp&quot;:1725043119.1579,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;loadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9fcba8c71a627853&quot;,&quot;start_timestamp&quot;:1725043123.3191001,&quot;timestamp&quot;:1725043123.3204,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b54f36548ce989f5&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;84c37957ce26128e&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8f041f5dd2b57ede&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;92ef438995822058&quot;,&quot;start_timestamp&quot;:1725043118.4903,&quot;timestamp&quot;:1725043118.4903,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8fbf7edc1bd65ffb&quot;,&quot;start_timestamp&quot;:1725043118.5085,&quot;timestamp&quot;:1725043118.6453001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9bbc2c77fef8d4e9&quot;,&quot;start_timestamp&quot;:1725043118.6435,&quot;timestamp&quot;:1725043118.6453001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:263417,&quot;http.response_content_length&quot;:263117,&quot;http.decoded_response_content_length&quot;:918455,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/main.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;81663703ac3d9bcc&quot;,&quot;start_timestamp&quot;:1725043118.7220001,&quot;timestamp&quot;:1725043118.9886,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1046,&quot;http.response_content_length&quot;:746,&quot;http.decoded_response_content_length&quot;:1191,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/deighton.typography.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b7f49079eb1702e2&quot;,&quot;start_timestamp&quot;:1725043118.7235,&quot;timestamp&quot;:1725043118.9463,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36949,&quot;http.response_content_length&quot;:36649,&quot;http.decoded_response_content_length&quot;:165542,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/bootstrap.min.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a4ca6ac3ca409ac7&quot;,&quot;start_timestamp&quot;:1725043118.7241,&quot;timestamp&quot;:1725043118.9572,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2575,&quot;http.response_content_length&quot;:2275,&quot;http.decoded_response_content_length&quot;:4608,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/tui-color-picker.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b2f0dc6ff8cfc96a&quot;,&quot;start_timestamp&quot;:1725043118.7248,&quot;timestamp&quot;:1725043118.9439,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8621,&quot;http.response_content_length&quot;:8321,&quot;http.decoded_response_content_length&quot;:41990,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;/styles/tui-image-editor.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b662b99b5b4015d1&quot;,&quot;start_timestamp&quot;:1725043118.7254,&quot;timestamp&quot;:1725043118.9473,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;https://static.zdassets.com/ekr/snippet.js?key</stringProp>
                  <stringProp name="Argument.value">aaddbd3c-9b31-4779-9595-4a3196f644f5&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a7f20debb56934b5&quot;,&quot;start_timestamp&quot;:1725043118.726,&quot;timestamp&quot;:1725043118.8349001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:922,&quot;http.response_content_length&quot;:622,&quot;http.decoded_response_content_length&quot;:3058,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;https://fonts.googleapis.com/css?family=Material Icons|Material Icons Outlined|Material Icons Two Tone|Material Icons Round|Material Icons Sharp&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8fe2d80c90e55c29&quot;,&quot;start_timestamp&quot;:1725043118.7268,&quot;timestamp&quot;:1725043118.8406,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:95684,&quot;http.response_content_length&quot;:95384,&quot;http.decoded_response_content_length&quot;:241312,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/main.8a2da297.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;95b6244457a14df8&quot;,&quot;start_timestamp&quot;:1725043118.7274,&quot;timestamp&quot;:1725043119.1223001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;first-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;97407b5a55abdee7&quot;,&quot;start_timestamp&quot;:1725043119.0846,&quot;timestamp&quot;:1725043119.0846,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;first-contentful-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8351f89d40ed1f34&quot;,&quot;start_timestamp&quot;:1725043119.0846,&quot;timestamp&quot;:1725043119.0846,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10758,&quot;http.response_content_length&quot;:10458,&quot;http.decoded_response_content_length&quot;:28045,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6382.85eb8ecd.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bea8cbc38fdc12f2&quot;,&quot;start_timestamp&quot;:1725043119.1506,&quot;timestamp&quot;:1725043119.3079998,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:18578,&quot;http.response_content_length&quot;:18278,&quot;http.decoded_response_content_length&quot;:49139,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7618.2c36cfdd.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a2343ca878d9d9bb&quot;,&quot;start_timestamp&quot;:1725043119.1514,&quot;timestamp&quot;:1725043119.334,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:14839,&quot;http.response_content_length&quot;:14539,&quot;http.decoded_response_content_length&quot;:33891,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3836.367210be.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;904b063ce8d326b0&quot;,&quot;start_timestamp&quot;:1725043119.1526,&quot;timestamp&quot;:1725043119.3372002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:7633,&quot;http.response_content_length&quot;:7333,&quot;http.decoded_response_content_length&quot;:17044,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/854.1cdfd642.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a39d5cbeff46e278&quot;,&quot;start_timestamp&quot;:1725043119.1532001,&quot;timestamp&quot;:1725043119.3747,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:354082,&quot;http.response_content_length&quot;:353782,&quot;http.decoded_response_content_length&quot;:614106,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/css/6099.ffeaac90.chunk.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b68ea8f4e2325f5a&quot;,&quot;start_timestamp&quot;:1725043119.1542,&quot;timestamp&quot;:1725043119.5294,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:481195,&quot;http.response_content_length&quot;:480895,&quot;http.decoded_response_content_length&quot;:1316756,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6099.fd3329d3.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b70dda5f33d9ba8d&quot;,&quot;start_timestamp&quot;:1725043119.1548,&quot;timestamp&quot;:1725043119.5639,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/remoteEntry.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;83cc795d64e6dda9&quot;,&quot;start_timestamp&quot;:1725043119.1559,&quot;timestamp&quot;:1725043119.2444,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1335,&quot;http.response_content_length&quot;:1035,&quot;http.decoded_response_content_length&quot;:1951,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/css/2429.2962eac6.chunk.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8af157c0f51e31d2&quot;,&quot;start_timestamp&quot;:1725043119.1568,&quot;timestamp&quot;:1725043119.4829001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:708318,&quot;http.response_content_length&quot;:708018,&quot;http.decoded_response_content_length&quot;:2015461,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2429.b63540f2.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bb3f174bce0aa03a&quot;,&quot;start_timestamp&quot;:1725043119.157,&quot;timestamp&quot;:1725043119.931,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2672,&quot;http.response_content_length&quot;:2372,&quot;http.decoded_response_content_length&quot;:3833,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/8525.b2f61626.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;901c8aae918eef31&quot;,&quot;start_timestamp&quot;:1725043119.2589002,&quot;timestamp&quot;:1725043119.5588002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2673,&quot;http.response_content_length&quot;:2373,&quot;http.decoded_response_content_length&quot;:5489,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3953.05ffbaf8.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;be55a7aeaf9dc524&quot;,&quot;start_timestamp&quot;:1725043119.2644,&quot;timestamp&quot;:1725043119.5593,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:16840,&quot;http.response_content_length&quot;:16540,&quot;http.decoded_response_content_length&quot;:49463,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6372.81b5579b.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;89ed6a6d7cdf5efe&quot;,&quot;start_timestamp&quot;:1725043119.2669,&quot;timestamp&quot;:1725043119.6454,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:4431,&quot;http.response_content_length&quot;:4131,&quot;http.decoded_response_content_length&quot;:9195,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9063.9908aa88.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;abe1d5441746bff0&quot;,&quot;start_timestamp&quot;:1725043119.2699,&quot;timestamp&quot;:1725043119.7027001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5549,&quot;http.response_content_length&quot;:5249,&quot;http.decoded_response_content_length&quot;:11843,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5338.de786784.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a3ff6ee070431861&quot;,&quot;start_timestamp&quot;:1725043119.2727,&quot;timestamp&quot;:1725043119.6972,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3111,&quot;http.response_content_length&quot;:2811,&quot;http.decoded_response_content_length&quot;:5671,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1691.763be4ef.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9991cae092959e5a&quot;,&quot;start_timestamp&quot;:1725043119.2755,&quot;timestamp&quot;:1725043119.6961,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5827,&quot;http.response_content_length&quot;:5527,&quot;http.decoded_response_content_length&quot;:14650,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3576.e456c900.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b5450ab6df8dfa27&quot;,&quot;start_timestamp&quot;:1725043119.2778,&quot;timestamp&quot;:1725043119.7234,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:43390,&quot;http.response_content_length&quot;:43090,&quot;http.decoded_response_content_length&quot;:118510,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/4762.85999466.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;835f9ec8714fa94d&quot;,&quot;start_timestamp&quot;:1725043119.2803001,&quot;timestamp&quot;:1725043119.7844002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:17256,&quot;http.response_content_length&quot;:16956,&quot;http.decoded_response_content_length&quot;:42779,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3374.e8afb348.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8e7aca539dcd8d8f&quot;,&quot;start_timestamp&quot;:1725043119.2835,&quot;timestamp&quot;:1725043119.8308,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:79504,&quot;http.response_content_length&quot;:79204,&quot;http.decoded_response_content_length&quot;:208646,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7251.dbce874d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b650bd8e3cb1fe41&quot;,&quot;start_timestamp&quot;:1725043119.2878,&quot;timestamp&quot;:1725043119.8942,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:57918,&quot;http.response_content_length&quot;:57618,&quot;http.decoded_response_content_length&quot;:180560,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6672.ba9df7e1.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;945c1c6aa59f6e89&quot;,&quot;start_timestamp&quot;:1725043119.2908,&quot;timestamp&quot;:1725043119.8795002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:39633,&quot;http.response_content_length&quot;:39333,&quot;http.decoded_response_content_length&quot;:103017,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3877.662fde42.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8132004e26fb1573&quot;,&quot;start_timestamp&quot;:1725043119.2940001,&quot;timestamp&quot;:1725043119.9060001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:9980,&quot;http.response_content_length&quot;:9680,&quot;http.decoded_response_content_length&quot;:25442,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6732.f6c866a5.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9c5bab9e1c40360d&quot;,&quot;start_timestamp&quot;:1725043119.2968001,&quot;timestamp&quot;:1725043119.9254,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:9519,&quot;http.response_content_length&quot;:9219,&quot;http.decoded_response_content_length&quot;:31890,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5932.941efabd.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;854a1638f2e0f1be&quot;,&quot;start_timestamp&quot;:1725043119.2992,&quot;timestamp&quot;:1725043119.9777,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1473,&quot;http.response_content_length&quot;:1173,&quot;http.decoded_response_content_length&quot;:1721,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9764.24082a34.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b024b115e236fab5&quot;,&quot;start_timestamp&quot;:1725043119.3027,&quot;timestamp&quot;:1725043120.0257,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1778,&quot;http.response_content_length&quot;:1478,&quot;http.decoded_response_content_length&quot;:2330,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5406.c238c79d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b3d5dd93c2aa0ceb&quot;,&quot;start_timestamp&quot;:1725043119.305,&quot;timestamp&quot;:1725043120.075,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:854,&quot;http.response_content_length&quot;:554,&quot;http.decoded_response_content_length&quot;:580,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6268.8d1270de.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a2fc036a2203c6f4&quot;,&quot;start_timestamp&quot;:1725043119.3069,&quot;timestamp&quot;:1725043120.0969,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6508,&quot;http.response_content_length&quot;:6208,&quot;http.decoded_response_content_length&quot;:14919,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7409.5f5da97f.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a08e9ea4d7bd24ce&quot;,&quot;start_timestamp&quot;:1725043119.3089,&quot;timestamp&quot;:1725043120.0990002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:12092,&quot;http.response_content_length&quot;:11792,&quot;http.decoded_response_content_length&quot;:36287,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1793.3c3b6526.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8130954f6f518999&quot;,&quot;start_timestamp&quot;:1725043119.3114,&quot;timestamp&quot;:1725043120.0999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:47998,&quot;http.response_content_length&quot;:47698,&quot;http.decoded_response_content_length&quot;:148434,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5314.148d011d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8cf04e9ed6dee29c&quot;,&quot;start_timestamp&quot;:1725043119.3135002,&quot;timestamp&quot;:1725043120.1302001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:27033,&quot;http.response_content_length&quot;:26733,&quot;http.decoded_response_content_length&quot;:83171,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3963.88aac7ed.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b1133069c349aad1&quot;,&quot;start_timestamp&quot;:1725043119.3155,&quot;timestamp&quot;:1725043120.1897001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:62153,&quot;http.response_content_length&quot;:61853,&quot;http.decoded_response_content_length&quot;:172086,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/8535.aaa28318.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;80faee7b1d9c0a07&quot;,&quot;start_timestamp&quot;:1725043119.3187,&quot;timestamp&quot;:1725043120.2279,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:499,&quot;http.response_content_length&quot;:199,&quot;http.decoded_response_content_length&quot;:118,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5870.16db69f7.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;ae27e41ad7dbd880&quot;,&quot;start_timestamp&quot;:1725043119.3211,&quot;timestamp&quot;:1725043120.2362,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:32026,&quot;http.response_content_length&quot;:31726,&quot;http.decoded_response_content_length&quot;:76949,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3245.d03655fa.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;92dbbd5f32359178&quot;,&quot;start_timestamp&quot;:1725043119.3231,&quot;timestamp&quot;:1725043120.2451,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:173324,&quot;http.response_content_length&quot;:173024,&quot;http.decoded_response_content_length&quot;:501009,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/4694.98497cfc.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bebc8cc1df748a27&quot;,&quot;start_timestamp&quot;:1725043119.3258,&quot;timestamp&quot;:1725043120.2819998,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:13690,&quot;http.response_content_length&quot;:13390,&quot;http.decoded_response_content_length&quot;:36917,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1343.d3e5212d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b21fdf975e0c9426&quot;,&quot;start_timestamp&quot;:1725043119.3276,&quot;timestamp&quot;:1725043120.2915,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:33446,&quot;http.response_content_length&quot;:33146,&quot;http.decoded_response_content_length&quot;:101468,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3268.0101a028.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9f2c26819b584f18&quot;,&quot;start_timestamp&quot;:1725043119.3297,&quot;timestamp&quot;:1725043120.3948,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:4016,&quot;http.response_content_length&quot;:3716,&quot;http.decoded_response_content_length&quot;:7636,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/477.e29d831c.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;be727b8206699237&quot;,&quot;start_timestamp&quot;:1725043119.3319001,&quot;timestamp&quot;:1725043120.4098,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:854,&quot;http.response_content_length&quot;:554,&quot;http.decoded_response_content_length&quot;:580,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9125.87477488.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a5079d803117adc9&quot;,&quot;start_timestamp&quot;:1725043119.3346,&quot;timestamp&quot;:1725043120.3941,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3345,&quot;http.response_content_length&quot;:3045,&quot;http.decoded_response_content_length&quot;:7417,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2629.9d8c401e.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9ff901beb88c24b9&quot;,&quot;start_timestamp&quot;:1725043119.3367,&quot;timestamp&quot;:1725043120.4092999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:60438,&quot;http.response_content_length&quot;:60138,&quot;http.decoded_response_content_length&quot;:157218,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2376.cbe5ca61.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;baf6778d3a411a73&quot;,&quot;start_timestamp&quot;:1725043119.3385,&quot;timestamp&quot;:1725043120.4583,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1530,&quot;http.response_content_length&quot;:1230,&quot;http.decoded_response_content_length&quot;:1924,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9613.cb10eb69.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a43bbed7557a0939&quot;,&quot;start_timestamp&quot;:1725043119.3403,&quot;timestamp&quot;:1725043120.4745002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:240045,&quot;http.response_content_length&quot;:239745,&quot;http.decoded_response_content_length&quot;:548349,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3411.c510a0ac.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;989302ed29b9db0c&quot;,&quot;start_timestamp&quot;:1725043119.3418,&quot;timestamp&quot;:1725043120.6133,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:26125,&quot;http.response_content_length&quot;:25825,&quot;http.decoded_response_content_length&quot;:67707,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/8626.68fb1d01.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9456cec87a316d63&quot;,&quot;start_timestamp&quot;:1725043119.3431,&quot;timestamp&quot;:1725043120.5912,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6653,&quot;http.response_content_length&quot;:6353,&quot;http.decoded_response_content_length&quot;:17686,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1600.2ad828fb.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9ef7a53679b72b95&quot;,&quot;start_timestamp&quot;:1725043119.3448,&quot;timestamp&quot;:1725043120.5513,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:360995,&quot;http.response_content_length&quot;:360695,&quot;http.decoded_response_content_length&quot;:1070533,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9458.d6388f05.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b2cc9a4631b73759&quot;,&quot;start_timestamp&quot;:1725043119.3459,&quot;timestamp&quot;:1725043120.6725001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5960,&quot;http.response_content_length&quot;:5660,&quot;http.decoded_response_content_length&quot;:13337,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/4662.5c9b9662.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;946d4e9322fa9301&quot;,&quot;start_timestamp&quot;:1725043119.3466,&quot;timestamp&quot;:1725043120.6422,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:13009,&quot;http.response_content_length&quot;:12709,&quot;http.decoded_response_content_length&quot;:32109,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7391.a516f8fd.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;874afd24b7cfc61f&quot;,&quot;start_timestamp&quot;:1725043119.3477,&quot;timestamp&quot;:1725043120.6435,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:509,&quot;http.response_content_length&quot;:209,&quot;http.decoded_response_content_length&quot;:131,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3861.04b8f758.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8cbd7f07384514b0&quot;,&quot;start_timestamp&quot;:1725043119.3486001,&quot;timestamp&quot;:1725043120.6966002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:40226,&quot;http.response_content_length&quot;:39926,&quot;http.decoded_response_content_length&quot;:94196,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2332.5a5fce1b.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bb6b63d78058a42c&quot;,&quot;start_timestamp&quot;:1725043119.3493001,&quot;timestamp&quot;:1725043120.7908,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5748,&quot;http.response_content_length&quot;:5448,&quot;http.decoded_response_content_length&quot;:14321,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/8093.d3a6c749.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;abadb2c099d9dda4&quot;,&quot;start_timestamp&quot;:1725043119.3499,&quot;timestamp&quot;:1725043120.7919,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:853,&quot;http.response_content_length&quot;:553,&quot;http.decoded_response_content_length&quot;:580,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3887.ea80faa3.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b61528e0b3200a96&quot;,&quot;start_timestamp&quot;:1725043119.3503,&quot;timestamp&quot;:1725043120.7867,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15147,&quot;http.response_content_length&quot;:14847,&quot;http.decoded_response_content_length&quot;:49030,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7591.c3333c6c.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b9f1ca1736a22a87&quot;,&quot;start_timestamp&quot;:1725043119.3509,&quot;timestamp&quot;:1725043120.83,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:48041,&quot;http.response_content_length&quot;:47741,&quot;http.decoded_response_content_length&quot;:135948,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3948.671d39e5.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;80f8186ea107170e&quot;,&quot;start_timestamp&quot;:1725043119.3515,&quot;timestamp&quot;:1725043120.8373,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:22734,&quot;http.response_content_length&quot;:22434,&quot;http.decoded_response_content_length&quot;:64480,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6055.1e2b473f.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;aa754327128b78e4&quot;,&quot;start_timestamp&quot;:1725043119.3525,&quot;timestamp&quot;:1725043120.8625,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:118443,&quot;http.response_content_length&quot;:118143,&quot;http.decoded_response_content_length&quot;:303468,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7112.f84e7ee3.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8d2830124c0c9db3&quot;,&quot;start_timestamp&quot;:1725043119.3536,&quot;timestamp&quot;:1725043120.9839,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:4663,&quot;http.response_content_length&quot;:4363,&quot;http.decoded_response_content_length&quot;:9829,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/8102.f4d2eace.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9a17a27a15f22c0f&quot;,&quot;start_timestamp&quot;:1725043119.3546,&quot;timestamp&quot;:1725043120.9631999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3510,&quot;http.response_content_length&quot;:3210,&quot;http.decoded_response_content_length&quot;:7179,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2820.5b65148d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9336407b44633fd9&quot;,&quot;start_timestamp&quot;:1725043119.3599,&quot;timestamp&quot;:1725043120.9905,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:92391,&quot;http.response_content_length&quot;:92091,&quot;http.decoded_response_content_length&quot;:376997,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6661.ee89ba9c.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a24eb798b91420da&quot;,&quot;start_timestamp&quot;:1725043119.3624,&quot;timestamp&quot;:1725043121.0373,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2784,&quot;http.response_content_length&quot;:2484,&quot;http.decoded_response_content_length&quot;:8361,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1661.e809e199.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a63a39cf8d4c461a&quot;,&quot;start_timestamp&quot;:1725043119.3652,&quot;timestamp&quot;:1725043121.0261002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2721,&quot;http.response_content_length&quot;:2421,&quot;http.decoded_response_content_length&quot;:4967,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2323.7c9f227f.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bfec86891cc7a697&quot;,&quot;start_timestamp&quot;:1725043119.3682,&quot;timestamp&quot;:1725043121.0272,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3139,&quot;http.response_content_length&quot;:2839,&quot;http.decoded_response_content_length&quot;:6142,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5856.96de8872.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9a01b0787d8a0dca&quot;,&quot;start_timestamp&quot;:1725043119.3725,&quot;timestamp&quot;:1725043121.1155999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1081,&quot;http.response_content_length&quot;:781,&quot;http.decoded_response_content_length&quot;:1525,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/8345.883f1cdb.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;91e78b26f38cd4c3&quot;,&quot;start_timestamp&quot;:1725043119.3747,&quot;timestamp&quot;:1725043121.3926,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6749,&quot;http.response_content_length&quot;:6449,&quot;http.decoded_response_content_length&quot;:17400,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3695.88701539.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9002f0a5e5dd07ef&quot;,&quot;start_timestamp&quot;:1725043119.3766,&quot;timestamp&quot;:1725043121.3935,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2955,&quot;http.response_content_length&quot;:2655,&quot;http.decoded_response_content_length&quot;:6209,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2219.6c0eb106.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;97278ceee05590e4&quot;,&quot;start_timestamp&quot;:1725043119.3786001,&quot;timestamp&quot;:1725043121.4126,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:20452,&quot;http.response_content_length&quot;:20152,&quot;http.decoded_response_content_length&quot;:57480,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3311.0065cbc5.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a8c57a739aba14ac&quot;,&quot;start_timestamp&quot;:1725043119.3803,&quot;timestamp&quot;:1725043121.4238,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:644,&quot;http.response_content_length&quot;:344,&quot;http.decoded_response_content_length&quot;:321,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/3662.5dbd4539.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b5ae44691ea178e5&quot;,&quot;start_timestamp&quot;:1725043119.3811,&quot;timestamp&quot;:1725043121.4138,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8753,&quot;http.response_content_length&quot;:8453,&quot;http.decoded_response_content_length&quot;:18774,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9628.0bfd9ef9.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a9fae877a4b39a56&quot;,&quot;start_timestamp&quot;:1725043119.3815,&quot;timestamp&quot;:1725043121.4616,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:17274,&quot;http.response_content_length&quot;:16974,&quot;http.decoded_response_content_length&quot;:40634,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/871.03a24f2d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8caec19b73e00bd4&quot;,&quot;start_timestamp&quot;:1725043119.3818,&quot;timestamp&quot;:1725043121.5416,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:33024,&quot;http.response_content_length&quot;:32724,&quot;http.decoded_response_content_length&quot;:102249,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/4389.9af45592.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;99dee7e1ad808c22&quot;,&quot;start_timestamp&quot;:1725043119.382,&quot;timestamp&quot;:1725043121.5753999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:854,&quot;http.response_content_length&quot;:554,&quot;http.decoded_response_content_length&quot;:580,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1506.92f84ba8.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a26ba208a5a3f78e&quot;,&quot;start_timestamp&quot;:1725043119.3822,&quot;timestamp&quot;:1725043121.6081,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:86786,&quot;http.response_content_length&quot;:86486,&quot;http.decoded_response_content_length&quot;:223038,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7726.cc63e1eb.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;aefa0555ebb410a0&quot;,&quot;start_timestamp&quot;:1725043119.3824,&quot;timestamp&quot;:1725043121.6347,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:43735,&quot;http.response_content_length&quot;:43435,&quot;http.decoded_response_content_length&quot;:144556,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/9942.bf76ba38.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;95350d436c487c57&quot;,&quot;start_timestamp&quot;:1725043119.3827,&quot;timestamp&quot;:1725043121.6373,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1020,&quot;http.response_content_length&quot;:720,&quot;http.decoded_response_content_length&quot;:860,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/579.b927a13b.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;ba45c9daaed3f2c4&quot;,&quot;start_timestamp&quot;:1725043119.3830001,&quot;timestamp&quot;:1725043121.6290002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6617,&quot;http.response_content_length&quot;:6317,&quot;http.decoded_response_content_length&quot;:15163,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/5496.ea419436.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9f609f83a1ee1079&quot;,&quot;start_timestamp&quot;:1725043119.3832002,&quot;timestamp&quot;:1725043121.6898003,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1497,&quot;http.response_content_length&quot;:1197,&quot;http.decoded_response_content_length&quot;:1879,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/663.f2fabd17.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b841d5240d0c2d13&quot;,&quot;start_timestamp&quot;:1725043119.3838,&quot;timestamp&quot;:1725043121.7384,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:7779,&quot;http.response_content_length&quot;:7479,&quot;http.decoded_response_content_length&quot;:17260,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7096.10be6b9b.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;93cf954f1d423762&quot;,&quot;start_timestamp&quot;:1725043119.3842,&quot;timestamp&quot;:1725043121.7552001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8915,&quot;http.response_content_length&quot;:8615,&quot;http.decoded_response_content_length&quot;:20665,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2264.c5ff676e.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a03d9cfc44ffda5b&quot;,&quot;start_timestamp&quot;:1725043119.3846002,&quot;timestamp&quot;:1725043121.8580003,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:60887,&quot;http.response_content_length&quot;:60587,&quot;http.decoded_response_content_length&quot;:157691,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1125.d91d22bd.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b67c7eda89116072&quot;,&quot;start_timestamp&quot;:1725043119.3847,&quot;timestamp&quot;:1725043121.8302,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6344,&quot;http.response_content_length&quot;:6044,&quot;http.decoded_response_content_length&quot;:14225,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1720.aad10306.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a74433980677bef7&quot;,&quot;start_timestamp&quot;:1725043119.3849,&quot;timestamp&quot;:1725043121.8576002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15374,&quot;http.response_content_length&quot;:15074,&quot;http.decoded_response_content_length&quot;:35611,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7792.14185858.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a42c857f9c0b2978&quot;,&quot;start_timestamp&quot;:1725043119.3852,&quot;timestamp&quot;:1725043121.8569,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:249477,&quot;http.response_content_length&quot;:249177,&quot;http.decoded_response_content_length&quot;:707763,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/7217.d90759c2.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;ac06a71bc92653bc&quot;,&quot;start_timestamp&quot;:1725043119.3855,&quot;timestamp&quot;:1725043121.9617,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8274,&quot;http.response_content_length&quot;:7974,&quot;http.decoded_response_content_length&quot;:25939,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/6662.109a1c7d.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;817fa95b31285e3d&quot;,&quot;start_timestamp&quot;:1725043119.3857,&quot;timestamp&quot;:1725043121.9266999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:175295,&quot;http.response_content_length&quot;:174995,&quot;http.decoded_response_content_length&quot;:426721,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/1238.31e2c7cd.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;899fba89bd5a9405&quot;,&quot;start_timestamp&quot;:1725043119.3858001,&quot;timestamp&quot;:1725043122.0256002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1403,&quot;http.response_content_length&quot;:1103,&quot;http.decoded_response_content_length&quot;:1523,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/js/2511.8d919eae.chunk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a2a21bc0947ff2bd&quot;,&quot;start_timestamp&quot;:1725043119.3860002,&quot;timestamp&quot;:1725043122.0103002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/common_temp_node_modules_pnpm_angular_core_18_0_4_rxjs_7_8_1_zone_js_0_14_7_node_modules_angu-91a538.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;ac74cc9aaed321d7&quot;,&quot;start_timestamp&quot;:1725043119.3869,&quot;timestamp&quot;:1725043119.4575,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/common_temp_node_modules_pnpm_angular_core_18_0_4_rxjs_7_8_1_zone_js_0_14_7_node_modules_angu-691515.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b7cf27a6aff82145&quot;,&quot;start_timestamp&quot;:1725043119.3873,&quot;timestamp&quot;:1725043119.461,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/common_temp_node_modules_pnpm_angular_core_18_0_4_rxjs_7_8_1_zone_js_0_14_7_node_modules_angu-ef0e0b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;96edf37b47d48834&quot;,&quot;start_timestamp&quot;:1725043119.3876,&quot;timestamp&quot;:1725043119.5874,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/common_temp_node_modules_pnpm_angular_common_18_0_4__angular_core_18_0_4_rxjs_7_8_1_node_modu-84b2960.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b2071cf9493b5e2d&quot;,&quot;start_timestamp&quot;:1725043119.3879,&quot;timestamp&quot;:1725043119.5106,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/common_temp_node_modules_pnpm_angular_common_18_0_4__angular_core_18_0_4_rxjs_7_8_1_node_modu-b3d0c41.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bde71e6160cb91fc&quot;,&quot;start_timestamp&quot;:1725043119.3882,&quot;timestamp&quot;:1725043119.4842,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/common_temp_node_modules_pnpm_angular_core_18_0_4_rxjs_7_8_1_zone_js_0_14_7_node_modules_angu-0309aa1.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8fb82f3514d2cd66&quot;,&quot;start_timestamp&quot;:1725043119.3884,&quot;timestamp&quot;:1725043119.4736001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a56bbe8bcd40cdd5&quot;,&quot;start_timestamp&quot;:1725043119.3885,&quot;timestamp&quot;:1725043120.4213,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;mark_feature_usage&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8f892f761656c038&quot;,&quot;start_timestamp&quot;:1725043122.8062,&quot;timestamp&quot;:1725043122.8062,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;868f5106f587b12b&quot;,&quot;start_timestamp&quot;:1725043122.8196,&quot;timestamp&quot;:1725043122.8196,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a00bf8db3211984e&quot;,&quot;start_timestamp&quot;:1725043122.8196,&quot;timestamp&quot;:1725043122.8197,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:ZoneAwarePromise&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bc5ad82e1a4fc9b5&quot;,&quot;start_timestamp&quot;:1725043122.8200002,&quot;timestamp&quot;:1725043122.8200002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:ZoneAwarePromise&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a217680f009ecd33&quot;,&quot;start_timestamp&quot;:1725043122.8200002,&quot;timestamp&quot;:1725043122.8204002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:toString&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;88dab75537dfefb2&quot;,&quot;start_timestamp&quot;:1725043122.8205001,&quot;timestamp&quot;:1725043122.8205001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:toString&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a0fb38e4e2640db7&quot;,&quot;start_timestamp&quot;:1725043122.8205001,&quot;timestamp&quot;:1725043122.8206,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:util&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;84360c73cba44601&quot;,&quot;start_timestamp&quot;:1725043122.8206,&quot;timestamp&quot;:1725043122.8206,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:util&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;928cc5f6cca8c430&quot;,&quot;start_timestamp&quot;:1725043122.8206,&quot;timestamp&quot;:1725043122.8211,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:legacy&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;95d4e5c86b88f010&quot;,&quot;start_timestamp&quot;:1725043122.8212001,&quot;timestamp&quot;:1725043122.8212001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:legacy&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;85ece2065d3f6200&quot;,&quot;start_timestamp&quot;:1725043122.8212001,&quot;timestamp&quot;:1725043122.8212001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:timers&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9811629ac3b5cd55&quot;,&quot;start_timestamp&quot;:1725043122.8212001,&quot;timestamp&quot;:1725043122.8212001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:timers&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b92e5f29b2c9aaa8&quot;,&quot;start_timestamp&quot;:1725043122.8212001,&quot;timestamp&quot;:1725043122.8214002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:requestAnimationFrame&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;aacbfb51c4215376&quot;,&quot;start_timestamp&quot;:1725043122.8214002,&quot;timestamp&quot;:1725043122.8214002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:requestAnimationFrame&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a74b6a06505cb6b2&quot;,&quot;start_timestamp&quot;:1725043122.8214002,&quot;timestamp&quot;:1725043122.8214002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:blocking&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b0c4f29080454583&quot;,&quot;start_timestamp&quot;:1725043122.8215,&quot;timestamp&quot;:1725043122.8215,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:blocking&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a6d1af2a1441760f&quot;,&quot;start_timestamp&quot;:1725043122.8215,&quot;timestamp&quot;:1725043122.8216,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:EventTarget&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;aa741558d819ade8&quot;,&quot;start_timestamp&quot;:1725043122.8216,&quot;timestamp&quot;:1725043122.8216,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:EventTarget&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bbd0b6cfaa62e127&quot;,&quot;start_timestamp&quot;:1725043122.8216,&quot;timestamp&quot;:1725043122.822,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:MutationObserver&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b50eb5b8c713a6de&quot;,&quot;start_timestamp&quot;:1725043122.822,&quot;timestamp&quot;:1725043122.822,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:MutationObserver&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9bf45dc0bec774ca&quot;,&quot;start_timestamp&quot;:1725043122.822,&quot;timestamp&quot;:1725043122.8221,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:IntersectionObserver&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;95a18607fdff7a26&quot;,&quot;start_timestamp&quot;:1725043122.8221002,&quot;timestamp&quot;:1725043122.8221002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:IntersectionObserver&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9fc4e653a9012a09&quot;,&quot;start_timestamp&quot;:1725043122.8221002,&quot;timestamp&quot;:1725043122.8223002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:FileReader&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;912e609538ebebca&quot;,&quot;start_timestamp&quot;:1725043122.8223,&quot;timestamp&quot;:1725043122.8223,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:FileReader&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9e899be714c23d8a&quot;,&quot;start_timestamp&quot;:1725043122.8223,&quot;timestamp&quot;:1725043122.8223999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:on_property&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;bf844e217a7d02b2&quot;,&quot;start_timestamp&quot;:1725043122.8224,&quot;timestamp&quot;:1725043122.8224,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:on_property&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;92e4f50a233811f3&quot;,&quot;start_timestamp&quot;:1725043122.8224,&quot;timestamp&quot;:1725043122.8369,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:customElements&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8bbfc1c434ceb5f4&quot;,&quot;start_timestamp&quot;:1725043122.8369,&quot;timestamp&quot;:1725043122.8369,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:customElements&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;b9acd005f69763f4&quot;,&quot;start_timestamp&quot;:1725043122.8369,&quot;timestamp&quot;:1725043122.8371,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:XHR&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9f428a22d2821a5a&quot;,&quot;start_timestamp&quot;:1725043122.8371,&quot;timestamp&quot;:1725043122.8371,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:XHR&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9b21016956342a08&quot;,&quot;start_timestamp&quot;:1725043122.8371,&quot;timestamp&quot;:1725043122.8374,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:geolocation&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8c34769c462640f4&quot;,&quot;start_timestamp&quot;:1725043122.8374,&quot;timestamp&quot;:1725043122.8374,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:geolocation&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;aabe617c6a6b29b7&quot;,&quot;start_timestamp&quot;:1725043122.8374,&quot;timestamp&quot;:1725043122.8374999,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:PromiseRejectionEvent&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;8054413db0166f09&quot;,&quot;start_timestamp&quot;:1725043122.8375,&quot;timestamp&quot;:1725043122.8375,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:PromiseRejectionEvent&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a46101dd0fa451d7&quot;,&quot;start_timestamp&quot;:1725043122.8375,&quot;timestamp&quot;:1725043122.8375,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:queueMicrotask&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;ac951d2f0e88927e&quot;,&quot;start_timestamp&quot;:1725043122.8375,&quot;timestamp&quot;:1725043122.8375,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;Zone:queueMicrotask&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a53ad278acfbff2b&quot;,&quot;start_timestamp&quot;:1725043122.8375,&quot;timestamp&quot;:1725043122.8375,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;description&quot;:&quot;sentry-tracing-init&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;926df774207ab21c&quot;,&quot;start_timestamp&quot;:1725043122.9376001,&quot;timestamp&quot;:1725043122.9376001,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36070,&quot;http.response_content_length&quot;:35770,&quot;http.decoded_response_content_length&quot;:35770,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/media/dTIMS-Inspect.840f9d51cb5b7ef60ecf38e0b545e18d.svg&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;99067c4db8a9f466&quot;,&quot;start_timestamp&quot;:1725043123.0977,&quot;timestamp&quot;:1725043123.2714002,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3424,&quot;http.response_content_length&quot;:3124,&quot;http.decoded_response_content_length&quot;:3124,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/static/media/DeightonLogoWhiteText.0a15471234dac17b7878284c1f251cff.svg&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;9dd40a4543a2e659&quot;,&quot;start_timestamp&quot;:1725043123.0979002,&quot;timestamp&quot;:1725043123.2711,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:616,&quot;http.response_content_length&quot;:316,&quot;http.decoded_response_content_length&quot;:313,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/manifest.json&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;a448e0de0fdff124&quot;,&quot;start_timestamp&quot;:1725043123.3301,&quot;timestamp&quot;:1725043123.4772,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;a813ca54cf5abccb&quot;,&quot;span_id&quot;:&quot;96b54c57ac9112f2&quot;,&quot;start_timestamp&quot;:1725043123.333,&quot;timestamp&quot;:1725043123.4765,&quot;trace_id&quot;:&quot;a6dcb6cada7643b78436aa6f09f0cc0d&quot;}],&quot;start_timestamp&quot;:1725043118.0815,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;,&quot;lcp.element&quot;:&quot;div.k-appbar-section &gt; img.d-app-bar-logo-image-dtims&quot;,&quot;lcp.url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/static/media/dTIMS-Inspect.840f9d51cb5b7ef60ecf38e0b545e18d.svg&quot;,&quot;lcp.size&quot;:12120},&quot;timestamp&quot;:1725043124.0721,&quot;transaction&quot;:&quot;/login/callback&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;measurements&quot;:{&quot;lcp&quot;:{&quot;value&quot;:5265.699999928474,&quot;unit&quot;:&quot;millisecond&quot;},&quot;fp&quot;:{&quot;value&quot;:1003.0999999046326,&quot;unit&quot;:&quot;millisecond&quot;},&quot;fcp&quot;:{&quot;value&quot;:1003.0999999046326,&quot;unit&quot;:&quot;millisecond&quot;},&quot;connection.rtt&quot;:{&quot;value&quot;:100,&quot;unit&quot;:&quot;millisecond&quot;},&quot;ttfb&quot;:{&quot;value&quot;:562.000036239624,&quot;unit&quot;:&quot;millisecond&quot;},&quot;ttfb.requestTime&quot;:{&quot;value&quot;:134.99999046325684,&quot;unit&quot;:&quot;millisecond&quot;}},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code=OL2y601aQi6uJj4UhJ4jM2mEGe5bQzy-hLhZJvsc3bk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/app/eu-inspect-develop-wqoeq/location" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/app/eu-inspect-develop-wqoeq/location</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/app/eu-inspect-develop-wqoeq/auth/providers/custom-token/login" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/app/eu-inspect-develop-wqoeq/auth/providers/custom-token/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;token&quot;:&quot;${Octa_Access_Token}&quot;,&quot;options&quot;:{&quot;device&quot;:{&quot;sdkVersion&quot;:&quot;1.5.1&quot;,&quot;platform&quot;:&quot;chrome&quot;,&quot;platformVersion&quot;:&quot;128.0.0&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o554886.ingest.sentry.io/api/4504243039305728/envelope/?sentry_key=0ce9ef23ecaf4e9dba2c6130bdd26809&amp;sentry_version=7&amp;sentry_client=sentry.javascript.react%2F7.57.0" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/4504243039305728/envelope/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.react/7.57.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">0ce9ef23ecaf4e9dba2c6130bdd26809</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:38:45.108Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;b9a3da105cf49d07&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;b9a3da105cf49d07&quot;,&quot;span_id&quot;:&quot;978aae79db340126&quot;,&quot;start_timestamp&quot;:1725043124.6821,&quot;timestamp&quot;:1725043124.7381,&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;b9a3da105cf49d07&quot;,&quot;span_id&quot;:&quot;805cc9788d6cc138&quot;,&quot;start_timestamp&quot;:1725043124.1556,&quot;timestamp&quot;:1725043124.2934,&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;}],&quot;start_timestamp&quot;:1725043124.1065,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;timestamp&quot;:1725043124.7381,&quot;transaction&quot;:&quot;/login/callback&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:38:45.108Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;b9a3da105cf49d07&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;b9a3da105cf49d07&quot;,&quot;span_id&quot;:&quot;978aae79db340126&quot;,&quot;start_timestamp&quot;:1725043124.6821,&quot;timestamp&quot;:1725043124.7381,&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;b9a3da105cf49d07&quot;,&quot;span_id&quot;:&quot;805cc9788d6cc138&quot;,&quot;start_timestamp&quot;:1725043124.1556,&quot;timestamp&quot;:1725043124.2934,&quot;trace_id&quot;:&quot;eed3a424a08e4f0096bb7a66a7de5e56&quot;}],&quot;start_timestamp&quot;:1725043124.1065,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;timestamp&quot;:1725043124.7381,&quot;transaction&quot;:&quot;/login/callback&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code</stringProp>
                  <stringProp name="Argument.value">OL2y601aQi6uJj4UhJ4jM2mEGe5bQzy-hLhZJvsc3bk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">TwYbSCix2Su4G9YDqbWCXwVNNVBFHSIBdlkFw53R0Vpd62F84h4b6TWTBzKtZgg7&quot;,&quot;to&quot;:&quot;/login/callback&quot;}},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;__span&quot;:&quot;82b6af150d419f62&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.071,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043124.072,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;__span&quot;:&quot;8fb367bb7dd56d2f&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.089,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1725043124.1,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;,&quot;message&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;},{&quot;timestamp&quot;:1725043124.397,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/auth/profile" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/auth/profile</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Access_Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/auth/session" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/auth/session</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Refresh_Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetAssetsNextPrev&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50,&quot;sort&quot;:[{&quot;field&quot;:&quot;name&quot;,&quot;dir&quot;:&quot;asc&quot;}]},&quot;query&quot;:&quot;query GetAssetsNextPrev($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]!, $templateId: String) {\n  assetNextPrev(skip: $skip, take: $take, filters: $filters, sort: $sort, templateId: $templateId) {\n    _id\n    _partition\n    name\n    mapping\n    structure_id\n    type\n    registration_number\n    from\n    to\n    distance_marker\n    material_specification\n    section_name\n    static_calculation\n    road_authority\n    owner_id\n    owner {\n      _id\n      name\n      __typename\n    }\n    elements {\n      _id\n      _partition\n      code\n      description\n      element_condition\n      name\n      requires_special_inspection\n      special_inspection_type\n      type\n      unit_of_measure\n      __typename\n    }\n    from_element\n    to_element\n    from_offset\n    to_offset\n    road_side\n    criticality\n    construction_area\n    checklist_id\n    status\n    category\n    ba_element_id\n    data\n    next_inspection\n    previous_inspection\n    ba_element_id\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetAssets&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50,&quot;sort&quot;:[{&quot;field&quot;:&quot;name&quot;,&quot;dir&quot;:&quot;asc&quot;}]},&quot;query&quot;:&quot;query GetAssets($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]!) {\n  assets(skip: $skip, take: $take, filters: $filters, sort: $sort) {\n    _id\n    _partition\n    name\n    mapping\n    structure_id\n    type\n    registration_number\n    from\n    to\n    distance_marker\n    material_specification\n    section_name\n    static_calculation\n    road_authority\n    owner_id\n    owner {\n      _id\n      name\n      __typename\n    }\n    elements {\n      _id\n      _partition\n      code\n      description\n      element_condition\n      name\n      requires_special_inspection\n      special_inspection_type\n      type\n      unit_of_measure\n      __typename\n    }\n    from_element\n    to_element\n    from_offset\n    to_offset\n    road_side\n    criticality\n    construction_area\n    checklist_id\n    status\n    category\n    ba_element_id\n    data\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetAssetCount&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50},&quot;query&quot;:&quot;query GetAssetCount($skip: Int!, $take: Int!, $filters: FilterInput) {\n  assetCount(skip: $skip, take: $take, filters: $filters)\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetAssetsNextPrev&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50,&quot;sort&quot;:[{&quot;field&quot;:&quot;name&quot;,&quot;dir&quot;:&quot;asc&quot;}]},&quot;query&quot;:&quot;query GetAssetsNextPrev($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]!, $templateId: String) {\n  assetNextPrev(skip: $skip, take: $take, filters: $filters, sort: $sort, templateId: $templateId) {\n    _id\n    _partition\n    name\n    mapping\n    structure_id\n    type\n    registration_number\n    from\n    to\n    distance_marker\n    material_specification\n    section_name\n    static_calculation\n    road_authority\n    owner_id\n    owner {\n      _id\n      name\n      __typename\n    }\n    elements {\n      _id\n      _partition\n      code\n      description\n      element_condition\n      name\n      requires_special_inspection\n      special_inspection_type\n      type\n      unit_of_measure\n      __typename\n    }\n    from_element\n    to_element\n    from_offset\n    to_offset\n    road_side\n    criticality\n    construction_area\n    checklist_id\n    status\n    category\n    ba_element_id\n    data\n    next_inspection\n    previous_inspection\n    ba_element_id\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;variables&quot;:{},&quot;query&quot;:&quot;{\n  __type(name: \&quot;Asset\&quot;) {\n    name\n    fields {\n      name\n      type {\n        name\n        kind\n        ofType {\n          name\n          kind\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetSomeTemplates&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:1000,&quot;sort&quot;:[{&quot;field&quot;:&quot;name&quot;,&quot;dir&quot;:&quot;asc&quot;}]},&quot;query&quot;:&quot;query GetSomeTemplates($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]!) {\n  templates(skip: $skip, take: $take, filters: $filters, sort: $sort) {\n    _id\n    _partition\n    name\n    is_element_enabled\n    display_name\n    hasChronology\n    hasDefects\n    hasElements\n    hasFeedback\n    hasStrategies\n    hasTasks\n    hasNeedsAssessment\n    hasTaskAssessment\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetTemplateCount&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:1000},&quot;query&quot;:&quot;query GetTemplateCount($skip: Int!, $take: Int!, $filters: FilterInput) {\n  templateCount(skip: $skip, take: $take, filters: $filters)\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on Projects" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetSomeDeightonProjects&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50,&quot;sort&quot;:[{&quot;field&quot;:&quot;name&quot;,&quot;dir&quot;:&quot;asc&quot;}]},&quot;query&quot;:&quot;query GetSomeDeightonProjects($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]) {\n  projects(skip: $skip, take: $take, filters: $filters, sort: $sort) {\n    _id\n    _partition\n    assigned_to_id\n    assigned_to {\n      _id\n      name\n      __typename\n    }\n    end_date\n    name\n    project_id\n    start_date\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetDeightonProjectCount&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50},&quot;query&quot;:&quot;query GetDeightonProjectCount($skip: Int!, $take: Int!, $filters: FilterInput) {\n  projectCount(skip: $skip, take: $take, filters: $filters)\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o554886.ingest.sentry.io/api/4504243039305728/envelope/?sentry_key=0ce9ef23ecaf4e9dba2c6130bdd26809&amp;sentry_version=7&amp;sentry_client=sentry.javascript.react%2F7.57.0" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/4504243039305728/envelope/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.react/7.57.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">0ce9ef23ecaf4e9dba2c6130bdd26809</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;abefecfa36234c0996a33dc51e295035&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:39:15.188Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;status&quot;:&quot;deadline_exceeded&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;8d2985fc9a439f46&quot;,&quot;start_timestamp&quot;:1725043140.1671999,&quot;status&quot;:&quot;cancelled&quot;,&quot;timestamp&quot;:1725043155.1865,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;867cd1481440271d&quot;,&quot;start_timestamp&quot;:1725043140.1687999,&quot;status&quot;:&quot;cancelled&quot;,&quot;timestamp&quot;:1725043155.1865,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;a4a4a8098cc6ec52&quot;,&quot;start_timestamp&quot;:1725043140.0695,&quot;timestamp&quot;:1725043140.1905,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;8cfad65bad5d1024&quot;,&quot;start_timestamp&quot;:1725043148.8047,&quot;timestamp&quot;:1725043148.8546999,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;86e5dd7163a7c5ea&quot;,&quot;start_timestamp&quot;:1725043153.6002,&quot;timestamp&quot;:1725043153.6512,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;80adc77761ce0e66&quot;,&quot;start_timestamp&quot;:1725043140.2115002,&quot;timestamp&quot;:1725043140.3618002,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;}],&quot;start_timestamp&quot;:1725043140.0812998,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;timestamp&quot;:1725043155.1865,&quot;transaction&quot;:&quot;/&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;abefecfa36234c0996a33dc51e295035&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;abefecfa36234c0996a33dc51e295035&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:39:15.188Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;status&quot;:&quot;deadline_exceeded&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;8d2985fc9a439f46&quot;,&quot;start_timestamp&quot;:1725043140.1671999,&quot;status&quot;:&quot;cancelled&quot;,&quot;timestamp&quot;:1725043155.1865,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;867cd1481440271d&quot;,&quot;start_timestamp&quot;:1725043140.1687999,&quot;status&quot;:&quot;cancelled&quot;,&quot;timestamp&quot;:1725043155.1865,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;a4a4a8098cc6ec52&quot;,&quot;start_timestamp&quot;:1725043140.0695,&quot;timestamp&quot;:1725043140.1905,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;8cfad65bad5d1024&quot;,&quot;start_timestamp&quot;:1725043148.8047,&quot;timestamp&quot;:1725043148.8546999,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;86e5dd7163a7c5ea&quot;,&quot;start_timestamp&quot;:1725043153.6002,&quot;timestamp&quot;:1725043153.6512,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;92ac7b3895c14e61&quot;,&quot;span_id&quot;:&quot;80adc77761ce0e66&quot;,&quot;start_timestamp&quot;:1725043140.2115002,&quot;timestamp&quot;:1725043140.3618002,&quot;trace_id&quot;:&quot;4c18da1db4bd46c09f29bc272a7e2e12&quot;}],&quot;start_timestamp&quot;:1725043140.0812998,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;timestamp&quot;:1725043155.1865,&quot;transaction&quot;:&quot;/&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;abefecfa36234c0996a33dc51e295035&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code</stringProp>
                  <stringProp name="Argument.value">OL2y601aQi6uJj4UhJ4jM2mEGe5bQzy-hLhZJvsc3bk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">TwYbSCix2Su4G9YDqbWCXwVNNVBFHSIBdlkFw53R0Vpd62F84h4b6TWTBzKtZgg7&quot;,&quot;to&quot;:&quot;/login/callback&quot;}},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;__span&quot;:&quot;82b6af150d419f62&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.071,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043124.072,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;__span&quot;:&quot;8fb367bb7dd56d2f&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.089,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1725043124.1,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;,&quot;message&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;},{&quot;timestamp&quot;:1725043124.397,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043125.108,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;,&quot;message&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;},{&quot;timestamp&quot;:1725043125.239,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043125.382,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043125.721,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043126.065,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.065,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043127.083,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.084,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.085,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.085,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.086,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.086,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.439,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.439,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.574,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.574,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.63,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.63,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.712,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.712,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043140.079,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;a.d-nav-link &gt; li.k-drawer-item &gt; div&quot;},{&quot;timestamp&quot;:1725043140.08,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/projects&quot;}},{&quot;timestamp&quot;:1725043140.289,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/projects&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on Add Button" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetSomeUsers&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:1000,&quot;filters&quot;:{&quot;items&quot;:[]}},&quot;query&quot;:&quot;query GetSomeUsers($skip: Int!, $take: Int!, $filters: FilterInput) {\n  users(skip: $skip, take: $take, filters: $filters) {\n    _id\n    _partition\n    name\n    roles\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o554886.ingest.sentry.io/api/4504243039305728/envelope/?sentry_key=0ce9ef23ecaf4e9dba2c6130bdd26809&amp;sentry_version=7&amp;sentry_client=sentry.javascript.react%2F7.57.0" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/4504243039305728/envelope/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.react/7.57.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">0ce9ef23ecaf4e9dba2c6130bdd26809</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;31387d19c84642a5bafe2d3bd7272684&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:40:02.085Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;http.response.status_code&quot;:200,&quot;http.response_content_length&quot;:7808},&quot;description&quot;:&quot;POST https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;span_id&quot;:&quot;b38aa798a6958eff&quot;,&quot;start_timestamp&quot;:1725043200.7045999,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1725043201.0798,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;span_id&quot;:&quot;965d39f50e8065c3&quot;,&quot;start_timestamp&quot;:1725043200.6091,&quot;timestamp&quot;:1725043200.7121,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;span_id&quot;:&quot;81e41cbdb1821695&quot;,&quot;start_timestamp&quot;:1725043200.7441,&quot;timestamp&quot;:1725043200.9047,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;}],&quot;start_timestamp&quot;:1725043200.6329,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;timestamp&quot;:1725043201.0798,&quot;transaction&quot;:&quot;/projects&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;31387d19c84642a5bafe2d3bd7272684&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;31387d19c84642a5bafe2d3bd7272684&quot;,&quot;sent_at&quot;:&quot;2024-08-30T18:40:02.085Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;eu-develop&quot;,&quot;public_key&quot;:&quot;0ce9ef23ecaf4e9dba2c6130bdd26809&quot;,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;http.response.status_code&quot;:200,&quot;http.response_content_length&quot;:7808},&quot;description&quot;:&quot;POST https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;span_id&quot;:&quot;b38aa798a6958eff&quot;,&quot;start_timestamp&quot;:1725043200.7045999,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1725043201.0798,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;span_id&quot;:&quot;965d39f50e8065c3&quot;,&quot;start_timestamp&quot;:1725043200.6091,&quot;timestamp&quot;:1725043200.7121,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10596,&quot;http.response_content_length&quot;:10296,&quot;http.decoded_response_content_length&quot;:10296,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/favicon.ico&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;8c07654841bbd5b7&quot;,&quot;span_id&quot;:&quot;81e41cbdb1821695&quot;,&quot;start_timestamp&quot;:1725043200.7441,&quot;timestamp&quot;:1725043200.9047,&quot;trace_id&quot;:&quot;6df6d37fdf6c4afb983e30adeb273de7&quot;}],&quot;start_timestamp&quot;:1725043200.6329,&quot;tags&quot;:{&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;12&quot;},&quot;timestamp&quot;:1725043201.0798,&quot;transaction&quot;:&quot;/projects&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;url&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;31387d19c84642a5bafe2d3bd7272684&quot;,&quot;environment&quot;:&quot;eu-develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.react&quot;,&quot;version&quot;:&quot;7.57.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.57.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1725043123.058,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Download the Apollo DevTools for a better development experience: %s&quot;,&quot;https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Download the Apollo DevTools for a better development experience: %s https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm&quot;},{&quot;timestamp&quot;:1725043123.059,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;warning&quot;,&quot;message&quot;:&quot;react-i18next:: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.&quot;},{&quot;timestamp&quot;:1725043123.148,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback?code</stringProp>
                  <stringProp name="Argument.value">OL2y601aQi6uJj4UhJ4jM2mEGe5bQzy-hLhZJvsc3bk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">TwYbSCix2Su4G9YDqbWCXwVNNVBFHSIBdlkFw53R0Vpd62F84h4b6TWTBzKtZgg7&quot;,&quot;to&quot;:&quot;/login/callback&quot;}},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043123.678,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/token&quot;,&quot;__span&quot;:&quot;82b6af150d419f62&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.071,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043124.072,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://dev-59278782.okta.com/oauth2/default/v1/keys&quot;,&quot;__span&quot;:&quot;8fb367bb7dd56d2f&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043124.089,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login/callback&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1725043124.1,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;,&quot;message&quot;:&quot;69c4bf9a07704811be7197084a3c350c&quot;},{&quot;timestamp&quot;:1725043124.397,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043125.108,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;,&quot;message&quot;:&quot;b51411f039d0488997d5f093c53f7d65&quot;},{&quot;timestamp&quot;:1725043125.239,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043125.382,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043125.721,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043126.065,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.065,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043126.066,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043127.083,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.084,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.085,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.085,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.086,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.086,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.439,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.439,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.574,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.574,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.63,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.63,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043127.712,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043127.712,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043140.079,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;a.d-nav-link &gt; li.k-drawer-item &gt; div&quot;},{&quot;timestamp&quot;:1725043140.08,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/projects&quot;}},{&quot;timestamp&quot;:1725043140.289,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[{&quot;message&quot;:&quot;response is not defined&quot;,&quot;name&quot;:&quot;ReferenceError&quot;,&quot;stack&quot;:&quot;ReferenceError: response is not defined\n    at chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:75:28\n    at _ZoneDelegate.invoke (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158572:158)\n    at ZoneImpl.run (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158354:35)\n    at https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:160607:30\n    at _ZoneDelegate.invokeTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158597:171)\n    at ZoneImpl.runTask (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158400:37)\n    at drainMicroTaskQueue (https://gray-glacier-098855b03.5.azurestaticapps.net/src_loadApp_ts.js:158768:23)&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ReferenceError: response is not defined&quot;},{&quot;timestamp&quot;:1725043155.188,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;abefecfa36234c0996a33dc51e295035&quot;,&quot;message&quot;:&quot;abefecfa36234c0996a33dc51e295035&quot;},{&quot;timestamp&quot;:1725043187.578,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043187.579,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;__span&quot;:&quot;8d2985fc9a439f46&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043187.681,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043187.682,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;__span&quot;:&quot;867cd1481440271d&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1725043200.627,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button.d-grid-button.k-rounded-md[aria-label=\&quot;Add\&quot;][type=\&quot;button\&quot;] &gt; svg &gt; path&quot;},{&quot;timestamp&quot;:1725043200.631,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/projects&quot;,&quot;to&quot;:&quot;/projects/editor&quot;}},{&quot;timestamp&quot;:1725043201.079,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1725043201.08,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://sc-inspect-develop-data-api.azurewebsites.net/graphql&quot;,&quot;__span&quot;:&quot;b38aa798a6958eff&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://sc-inspect-develop.azurewebsites.net/projects/editor&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on Submit Button">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;AddDeightonProject&quot;,&quot;variables&quot;:{&quot;project&quot;:{&quot;name&quot;:&quot;Saa_Performance&quot;,&quot;project_id&quot;:&quot;Saa_Performance&quot;,&quot;start_date&quot;:&quot;2024-08-30T04:00:00.000Z&quot;,&quot;end_date&quot;:&quot;2024-08-31T04:00:00.000Z&quot;,&quot;assigned_to_id&quot;:&quot;663527db6d507f37607a5aa1&quot;,&quot;assigned_to&quot;:{&quot;_id&quot;:&quot;663527db6d507f37607a5aa1&quot;,&quot;name&quot;:&quot;Santhosh.Rajan.admin@deighton.com&quot;},&quot;_partition&quot;:&quot;deighton&quot;}},&quot;query&quot;:&quot;mutation AddDeightonProject($project: CreateProjectInput!) {\n  createProject(createProjectInput: $project) {\n    _id\n    _partition\n    assigned_to_id\n    assigned_to {\n      _id\n      name\n      __typename\n    }\n    end_date\n    name\n    project_id\n    start_date\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="A_Verifying the Created Project">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-51681916">Saa_Performance</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetSomeDeightonProjects&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50,&quot;sort&quot;:[{&quot;field&quot;:&quot;name&quot;,&quot;dir&quot;:&quot;asc&quot;}]},&quot;query&quot;:&quot;query GetSomeDeightonProjects($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]) {\n  projects(skip: $skip, take: $take, filters: $filters, sort: $sort) {\n    _id\n    _partition\n    assigned_to_id\n    assigned_to {\n      _id\n      name\n      __typename\n    }\n    end_date\n    name\n    project_id\n    start_date\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop-data-api.azurewebsites.net/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetDeightonProjectCount&quot;,&quot;variables&quot;:{&quot;skip&quot;:0,&quot;take&quot;:50},&quot;query&quot;:&quot;query GetDeightonProjectCount($skip: Int!, $take: Int!, $filters: FilterInput) {\n  projectCount(skip: $skip, take: $take, filters: $filters)\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Octa_Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/auth/session" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/auth/session</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Refresh_Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/auth/session" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/auth/session</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Refresh_Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://realm.mongodb.com/api/client/v2.0/app/eu-inspect-develop-wqoeq/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/app/eu-inspect-develop-wqoeq/graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetSomeDeightonProjects&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query GetSomeDeightonProjects($skip: Int!, $take: Int!, $filters: FilterInput, $sort: [SortInput!]) {\n  projects(skip: $skip, take: $take, filters: $filters, sort: $sort) {\n    _id\n    _partition\n    assigned_to_id\n    assigned_to {\n      _id\n      name\n      __typename\n    }\n    end_date\n    name\n    project_id\n    start_date\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://realm.mongodb.com/api/client/v2.0/app/eu-inspect-develop-wqoeq/graphql" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/client/v2.0/app/eu-inspect-develop-wqoeq/graphql</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetDeightonProjectCount&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query GetDeightonProjectCount($skip: Int!, $take: Int!, $filters: FilterInput) {\n  projectCount(skip: $skip, take: $take, filters: $filters)\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Access_Token}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Logout" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/revoke" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">oauth2/default/v1/revoke</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="token_type_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">token_type_hint</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">token</stringProp>
                    <stringProp name="Argument.value">Nf2RPG7MpV5_jwnOUSPDqMV-7ymS88l7_TVqYWDhwsA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                    <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                    <stringProp name="Header.value">okta-auth-js/6.9.0 @okta/okta-react/6.7.0</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic MG9hNmE2bHB1bTByajFURFo1ZDc=</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stitch.mongodb.com/api/client/v2.0/auth/session" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">api/client/v2.0/auth/session</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${Refresh_Token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/revoke" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">oauth2/default/v1/revoke</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="token_type_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">token_type_hint</stringProp>
                    <stringProp name="Argument.value">access_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">token</stringProp>
                    <stringProp name="Argument.value">eyJraWQiOiJvY1VFOUR2YllJNG11RndSbFl1Q1Z1dkNLU3ZpM2VWb3NpOWgtcXhqN1U4IiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULnRLSXhpMEFhVVlFZUxkT2tnYXdkZFl1UE5iRGpjTk9veTR6Tm53RGZRZ0kub2FyMmN6bXFqN2ZtMFBFQlQ1ZDciLCJpc3MiOiJodHRwczovL2Rldi01OTI3ODc4Mi5va3RhLmNvbS9vYXV0aDIvZGVmYXVsdCIsImF1ZCI6ImFwaTovL2RlZmF1bHQiLCJpYXQiOjE3MjUwNDMxMjYsImV4cCI6MTcyNTA0NjcyNiwiY2lkIjoiMG9hNmE2bHB1bTByajFURFo1ZDciLCJ1aWQiOiIwMHVndmM0YTgyV240UlZ5RDVkNyIsInNjcCI6WyJvZmZsaW5lX2FjY2VzcyIsInByb2ZpbGUiLCJncm91cHMiLCJlbWFpbCIsIm9wZW5pZCJdLCJhdXRoX3RpbWUiOjE3MjUwNDMxMjAsInN1YiI6IlNhbnRob3NoLlJhamFuLmFkbWluQGRlaWdodG9uLmNvbSIsImdyb3VwcyI6WyJFdmVyeW9uZSIsIkRSRCAtIFBhdmVtZW50IEFkbWluaXN0cmF0b3IiLCJEZWlnaHRvbiAtIEFzc2V0IEluc3BlY3QiLCJkcmQiLCJkdGltcyIsIkluc3BlY3RBZG1pbiIsIkRSRCAtIFN0cnVjdHVyZSBBZG1pbmlzdHJhdG9yIl19.DCWU7f_Ux_9cvGrAvI-tfBVSwfev8tVMdT4h3zpLMjSxcRiXV_lBEDPVeqEiZhNT6vpfTBqLo5eKt-x1111LjuesW6b8_Xkv8Hgz2yz6VeFtKHPMmEdk6QetJarRs9esk6w9B0bVC2Ij5TRDJgzfv45C2ME9Bj5F8IDCx5BIJziqHgQ3rM-W1LA3aY1f4haOk9cWG59F1Q2DohNVjUezN5tn-cMKMadbnMYXs6MLssKjzF7DUHYN7dKF3fJ4E6zYZMJO2GfSJSbwgsbg2I8OPH4eWlOo7ODqguX09b7NxchgpTyWHq97C5q7Q60ekSsDpF16d27ACIsfSgNsDatGzg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                    <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                    <stringProp name="Header.value">okta-auth-js/6.9.0 @okta/okta-react/6.7.0</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic MG9hNmE2bHB1bTByajFURFo1ZDc=</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/logout?id_token_hint=eyJraWQiOiJvY1VFOUR2YllJNG11RndSbFl1Q1Z1dkNLU3ZpM2VWb3NpOWgtcXhqN1U4IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIwMHVndmM0YTgyV240UlZ5RDVkNyIsIm5hbWUiOiJTYW50aG9zaCBSYWphbiIsImVtYWlsIjoiU2FudGhvc2guUmFqYW4uYWRtaW5AZGVpZ2h0b24uY29tIiwidmVyIjoxLCJpc3MiOiJodHRwczovL2Rldi01OTI3ODc4Mi5va3RhLmNvbS9vYXV0aDIvZGVmYXVsdCIsImF1ZCI6IjBvYTZhNmxwdW0wcmoxVERaNWQ3IiwiaWF0IjoxNzI1MDQzMTI2LCJleHAiOjE3MjUwNDY3MjYsImp0aSI6IklELjZjTG9RdXBpNHRoaVk0TjZDVDFOeU8yWHlrS0tLOTRtdWN6VThvU2l5ZHciLCJhbXIiOlsicHdkIl0sImlkcCI6IjAwbzUybGk2MzB1cFZ2M0tKNWQ3Iiwibm9uY2UiOiJFOFlyZTZMaW5uT1RxYkhaN3JxZXZzczJMWnJhRFVVM2ZNUVdFdmtJTjRUaHdTUWYyUlc4SVdRR3c4aVVvOUZ3IiwicHJlZmVycmVkX3VzZXJuYW1lIjoiU2FudGhvc2guUmFqYW4uYWRtaW5AZGVpZ2h0b24uY29tIiwiYXV0aF90aW1lIjoxNzI1MDQzMTIwLCJhdF9oYXNoIjoiaHAySjFNSEdid0FfeG9aNVktdmNTdyIsImdyb3VwcyI6WyJFdmVyeW9uZSIsIkRSRCAtIFBhdmVtZW50IEFkbWluaXN0cmF0b3IiLCJEZWlnaHRvbiAtIEFzc2V0IEluc3BlY3QiLCJkcmQiLCJkdGltcyIsIkluc3BlY3RBZG1pbiIsIkRSRCAtIFN0cnVjdHVyZSBBZG1pbmlzdHJhdG9yIl19.l2jrjtMl3rLa7h_idH_O56VeQo06GDZWOdYVHr4duZjRCHzgbZ-r4PmFF4GeDy7tY0-V4vTKTlYzOL5rymDviwHugyCEW9uAxbE__xcgGnODHFnaQo0DgX7Ef89dRAL3TAV-ZOu2pFJ6AVL7hAtE6QN8nvmdnSNQqp8F_Yeqllkv_PMC8uOL4RwnJZcwBRC9kYX24VsthwFZ7jTi_CpNACzTi8hVl62e_NB0s_a5n0Yn_8ThPs53vEM69elcY39lPGU8wi__UcV7oziaAPon-_mrBRlL9mltOFgqbp25B7ZkeUqiWhWpKWnBClEUPOhQOBSwGSsjxIDjC0h0nIf1BQ&amp;post_logout_redirect_uri=https%3A%2F%2Fsc-inspect-develop.azurewebsites.net" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">oauth2/default/v1/logout</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id_token_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token_hint</stringProp>
                    <stringProp name="Argument.value">eyJraWQiOiJvY1VFOUR2YllJNG11RndSbFl1Q1Z1dkNLU3ZpM2VWb3NpOWgtcXhqN1U4IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIwMHVndmM0YTgyV240UlZ5RDVkNyIsIm5hbWUiOiJTYW50aG9zaCBSYWphbiIsImVtYWlsIjoiU2FudGhvc2guUmFqYW4uYWRtaW5AZGVpZ2h0b24uY29tIiwidmVyIjoxLCJpc3MiOiJodHRwczovL2Rldi01OTI3ODc4Mi5va3RhLmNvbS9vYXV0aDIvZGVmYXVsdCIsImF1ZCI6IjBvYTZhNmxwdW0wcmoxVERaNWQ3IiwiaWF0IjoxNzI1MDQzMTI2LCJleHAiOjE3MjUwNDY3MjYsImp0aSI6IklELjZjTG9RdXBpNHRoaVk0TjZDVDFOeU8yWHlrS0tLOTRtdWN6VThvU2l5ZHciLCJhbXIiOlsicHdkIl0sImlkcCI6IjAwbzUybGk2MzB1cFZ2M0tKNWQ3Iiwibm9uY2UiOiJFOFlyZTZMaW5uT1RxYkhaN3JxZXZzczJMWnJhRFVVM2ZNUVdFdmtJTjRUaHdTUWYyUlc4SVdRR3c4aVVvOUZ3IiwicHJlZmVycmVkX3VzZXJuYW1lIjoiU2FudGhvc2guUmFqYW4uYWRtaW5AZGVpZ2h0b24uY29tIiwiYXV0aF90aW1lIjoxNzI1MDQzMTIwLCJhdF9oYXNoIjoiaHAySjFNSEdid0FfeG9aNVktdmNTdyIsImdyb3VwcyI6WyJFdmVyeW9uZSIsIkRSRCAtIFBhdmVtZW50IEFkbWluaXN0cmF0b3IiLCJEZWlnaHRvbiAtIEFzc2V0IEluc3BlY3QiLCJkcmQiLCJkdGltcyIsIkluc3BlY3RBZG1pbiIsIkRSRCAtIFN0cnVjdHVyZSBBZG1pbmlzdHJhdG9yIl19.l2jrjtMl3rLa7h_idH_O56VeQo06GDZWOdYVHr4duZjRCHzgbZ-r4PmFF4GeDy7tY0-V4vTKTlYzOL5rymDviwHugyCEW9uAxbE__xcgGnODHFnaQo0DgX7Ef89dRAL3TAV-ZOu2pFJ6AVL7hAtE6QN8nvmdnSNQqp8F_Yeqllkv_PMC8uOL4RwnJZcwBRC9kYX24VsthwFZ7jTi_CpNACzTi8hVl62e_NB0s_a5n0Yn_8ThPs53vEM69elcY39lPGU8wi__UcV7oziaAPon-_mrBRlL9mltOFgqbp25B7ZkeUqiWhWpKWnBClEUPOhQOBSwGSsjxIDjC0h0nIf1BQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">https://sc-inspect-develop.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                    <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="RandomTimer.range">132042.0</stringProp>
                <stringProp name="ConstantTimer.delay">66021</stringProp>
                <stringProp name="TestPlan.comments">Recorded time was 132042 milliseconds</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sc-inspect-develop.azurewebsites.net/" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="RandomTimer.range">671.0</stringProp>
                <stringProp name="ConstantTimer.delay">335.5</stringProp>
                <stringProp name="TestPlan.comments">Recorded time was 671 milliseconds</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ekr.zdassets.com/compose/aaddbd3c-9b31-4779-9595-4a3196f644f5" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">compose/aaddbd3c-9b31-4779-9595-4a3196f644f5</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://deighton.zendesk.com/embeddable/config" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">embeddable/config</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/oauth2/default/v1/authorize?client_id=0oa6a6lpum0rj1TDZ5d7&amp;code_challenge=Coo2cjCgwBLKq-IM2pk7E9ZffP_edK8_h6AGE8V1B2s&amp;code_challenge_method=S256&amp;nonce=IFTggKSg8AClxPppYQPA8sr38Lf7ZWN0zqH3tqii06RqbzpdanvIdSifC5Q4B4Ne&amp;redirect_uri=https%3A%2F%2Fsc-inspect-develop.azurewebsites.net%2Flogin%2Fcallback&amp;response_type=code&amp;state=7zZJaSeMwzEtrQijDEyjuG5Jd9FsoZ1u7GT49jpxRdUtryKXwMenZMxLxgvbF8lJ&amp;scope=openid%20profile%20email%20groups%20offline_access" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">oauth2/default/v1/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email groups offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="code_challenge_method" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_challenge_method</stringProp>
                    <stringProp name="Argument.value">S256</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">https://sc-inspect-develop.azurewebsites.net/login/callback</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">7zZJaSeMwzEtrQijDEyjuG5Jd9FsoZ1u7GT49jpxRdUtryKXwMenZMxLxgvbF8lJ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">IFTggKSg8AClxPppYQPA8sr38Lf7ZWN0zqH3tqii06RqbzpdanvIdSifC5Q4B4Ne</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">0oa6a6lpum0rj1TDZ5d7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="code_challenge" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_challenge</stringProp>
                    <stringProp name="Argument.value">Coo2cjCgwBLKq-IM2pk7E9ZffP_edK8_h6AGE8V1B2s</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                    <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="RandomTimer.range">4355.0</stringProp>
                <stringProp name="ConstantTimer.delay">2177.5</stringProp>
                <stringProp name="TestPlan.comments">Recorded time was 4355 milliseconds</stringProp>
              </UniformRandomTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_stateToken_Logout" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">stateToken_logout</stringProp>
                <stringProp name="RegexExtractor.regex">stateToken=02.id.(.*?)&apos;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev-59278782.okta.com/idp/idx/introspect" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">idp/idx/introspect</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;stateToken&quot;:&quot;02.id.${stateToken_logout}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Okta-User-Agent-Extended" elementType="Header">
                    <stringProp name="Header.name">X-Okta-User-Agent-Extended</stringProp>
                    <stringProp name="Header.value">okta-auth-js/7.7.0 okta-signin-widget-7.21.0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/ion+json; okta-version=1.0.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/ion+json; okta-version=1.0.0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                    <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
